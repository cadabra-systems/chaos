#ifndef Chaos_Date_hpp
#define Chaos_Date_hpp

#include <ctime>
#include <string>

namespace chaos {
	class date
	{
	/** @name Constructors */
	/** @{ */
	public:
		date(int day = -1, int month = -1, int year = -1);
		date(const std::string& date_string);
		~date() = default;
	/** @} */

	/** @name Properties */
	/** @{ */
	private:
		int _day;
		int _month;
		int _year;
	/** @} */

	/** @name Operators */
	/** @{ */
	public:
		operator std::tm() const;
		operator std::string() const;

		/**
		 * @brief operator ==
		 * Сравнение двух дат, содержащих хотя бы одно поле any или undefined, всегда возвращает false:
		 *		"**-01-2020" == "##-01-2020" - false
		 *		"**-01-2020" == "01-##-2020" - false
		 *		"**-01-2020" == "01-01-####" - false
		 *		"01-**-2020" == "##-01-2020" - false
		 *		"01-**-2020" == "01-##-2020" - false
		 *		"01-**-2020" == "01-01-####" - false
		 *		"01-01-****" == "##-01-2020" - false
		 *		"01-01-****" == "01-##-2020" - false
		 *		"01-01-****" == "01-01-####" - false
		 * Сравнение остальных случаев происходит в отдельности по каждому из полей (day, month, year)
		 *		Для valid-полей все стандартно:
		 *			"01-01-2020" == "01-01-2020" - true
		 *			"01-01-2020" == "02-01-2020" - false
		 *			"01-01-2020" == "01-02-2020" - false
		 *			"01-01-2020" == "01-01-2022" - false
		 *		Any-поле всегда равно valid-полю:
		 *			"01-01-2020" == "**-01-2020" - true
		 *			"01-01-2020" == "01-**-2020" - true
		 *			"01-01-2020" == "01-01-****" - true
		 *		Undefined-поле всегда не равно valid-полю:
		 *			"01-01-2020" == "##-01-2020" - false
		 *			"01-01-2020" == "01-##-2020" - false
		 *			"01-01-2020" == "01-01-####" - false
		 *		Any-поле всегда равно any-полю:
		 *			"**-01-2020" == "**-01-2020" - true
		 *			"01-**-2020" == "01-**-2020" - true
		 *			"01-01-****" == "01-01-****" - true
		 *		Undefined-поле всегда равно undefined-полю:
		 *			"##-01-2020" == "##-01-2020" - true
		 *			"01-##-2020" == "01-##-2020" - true
		 *			"01-01-####" == "01-01-####" - true
		 * @param rhs
		 * @return
		 */
		bool operator==(const date& rhs) const;

		/**
		 * @brief operator !=
		 * Сравнение двух дат, содержащих хотя бы одно поле any или undefined, всегда возвращает false:
		 *		"**-01-2020" != "##-01-2020" - false
		 *		"**-01-2020" != "01-##-2020" - false
		 *		"**-01-2020" != "01-01-####" - false
		 *		"01-**-2020" != "##-01-2020" - false
		 *		"01-**-2020" != "01-##-2020" - false
		 *		"01-**-2020" != "01-01-####" - false
		 *		"01-01-****" != "##-01-2020" - false
		 *		"01-01-****" != "01-##-2020" - false
		 *		"01-01-****" != "01-01-####" - false
		 * Сравнение остальных случаев происходит в отдельности по каждому из полей (day, month, year)
		 *		Для valid-полей все стандартно:
		 *			"01-01-2020" != "01-01-2020" - false
		 *			"01-01-2020" != "02-01-2020" - true
		 *			"01-01-2020" != "01-02-2020" - true
		 *			"01-01-2020" != "01-01-2022" - true
		 *		Any-поле всегда равно valid-полю:
		 *			"01-01-2020" != "**-01-2020" - false
		 *			"01-01-2020" != "01-**-2020" - false
		 *			"01-01-2020" != "01-01-****" - false
		 *		Undefined-поле всегда не равно valid-полю:
		 *			"01-01-2020" != "##-01-2020" - true
		 *			"01-01-2020" != "01-##-2020" - true
		 *			"01-01-2020" != "01-01-####" - true
		 *		Any-поле всегда равно any-полю:
		 *			"**-01-2020" != "**-01-2020" - false
		 *			"01-**-2020" != "01-**-2020" - false
		 *			"01-01-****" != "01-01-****" - false
		 *		Undefined-поле всегда равно undefined-полю:
		 *			"##-01-2020" != "##-01-2020" - false
		 *			"01-##-2020" != "01-##-2020" - false
		 *			"01-01-####" != "01-01-####" - false
		 * @param rhs
		 * @return
		 */
		bool operator!=(const date& rhs) const;

		/**
		 * @brief operator >
		 * Сравнение двух дат, содержащих хотя бы одно поле any или undefined, всегда возвращает false:
		 *		"**-01-2020" > "##-01-2020" - false
		 *		"**-01-2020" > "01-##-2020" - false
		 *		"**-01-2020" > "01-01-####" - false
		 *		"01-**-2020" > "##-01-2020" - false
		 *		"01-**-2020" > "01-##-2020" - false
		 *		"01-**-2020" > "01-01-####" - false
		 *		"01-01-****" > "##-01-2020" - false
		 *		"01-01-****" > "01-##-2020" - false
		 *		"01-01-****" > "01-01-####" - false
		 * Сравнение остальных случаев происходит в отдельности по каждому из полей (day, month, year)
		 *		Для valid-полей все стандартно:
		 *			"01-01-2020" > "01-01-2020" - true
		 *			"02-01-2020" > "01-01-2020" - true
		 *			"01-02-2020" > "01-01-2020" - true
		 *			"01-01-2022" > "01-01-2020" - true
		 *			"01-01-2020" > "02-01-2020" - false
		 *			"01-01-2020" > "01-02-2020" - false
		 *			"01-01-2020" > "01-01-2022" - false
		 *		Any-поле всегда равно valid-полю:
		 *			"01-01-2020" > "**-01-2020" - false
		 *			"01-01-2020" > "01-**-2020" - false
		 *			"01-01-2020" > "01-01-****" - false
		 *		Undefined-поле всегда не равно valid-полю:
		 *			"01-01-2020" > "##-01-2020" - false
		 *			"01-01-2020" > "01-##-2020" - false
		 *			"01-01-2020" > "01-01-####" - false
		 *		Any-поле всегда равно any-полю:
		 *			"**-01-2020" > "**-01-2020" - false
		 *			"01-**-2020" > "01-**-2020" - false
		 *			"01-01-****" > "01-01-****" - false
		 *		Undefined-поле всегда равно undefined-полю:
		 *			"##-01-2020" > "##-01-2020" - false
		 *			"01-##-2020" > "01-##-2020" - false
		 *			"01-01-####" > "01-01-####" - false
		 * @param rhs
		 * @return
		 */
		bool operator>(const date& rhs) const;

		/**
		 * @brief operator >=
		 * Сравнение двух дат, содержащих хотя бы одно поле any или undefined, всегда возвращает false:
		 *		"**-01-2020" >= "##-01-2020" - false
		 *		"**-01-2020" >= "01-##-2020" - false
		 *		"**-01-2020" >= "01-01-####" - false
		 *		"01-**-2020" >= "##-01-2020" - false
		 *		"01-**-2020" >= "01-##-2020" - false
		 *		"01-**-2020" >= "01-01-####" - false
		 *		"01-01-****" >= "##-01-2020" - false
		 *		"01-01-****" >= "01-##-2020" - false
		 *		"01-01-****" >= "01-01-####" - false
		 * Сравнение остальных случаев происходит в отдельности по каждому из полей (day, month, year)
		 *		Для valid-полей все стандартно:
		 *			"01-01-2020" >= "01-01-2020" - true
		 *			"02-01-2020" >= "01-01-2020" - true
		 *			"01-02-2020" >= "01-01-2020" - true
		 *			"01-01-2022" >= "01-01-2020" - true
		 *			"01-01-2020" >= "02-01-2020" - false
		 *			"01-01-2020" >= "01-02-2020" - false
		 *			"01-01-2020" >= "01-01-2022" - false
		 *		Any-поле всегда равно valid-полю:
		 *			"01-01-2020" >= "**-01-2020" - true
		 *			"01-01-2020" >= "01-**-2020" - true
		 *			"01-01-2020" >= "01-01-****" - true
		 *		Undefined-поле всегда не равно valid-полю:
		 *			"01-01-2020" >= "##-01-2020" - false
		 *			"01-01-2020" >= "01-##-2020" - false
		 *			"01-01-2020" >= "01-01-####" - false
		 *		Any-поле всегда равно any-полю:
		 *			"**-01-2020" >= "**-01-2020" - true
		 *			"01-**-2020" >= "01-**-2020" - true
		 *			"01-01-****" >= "01-01-****" - true
		 *		Undefined-поле всегда равно undefined-полю:
		 *			"##-01-2020" >= "##-01-2020" - true
		 *			"01-##-2020" >= "01-##-2020" - true
		 *			"01-01-####" >= "01-01-####" - true
		 * @param rhs
		 * @return
		 */
		bool operator>=(const date& rhs) const;

		/**
		 * @brief operator <
		 * Сравнение двух дат, содержащих хотя бы одно поле any или undefined, всегда возвращает false:
		 *		"**-01-2020" < "##-01-2020" - false
		 *		"**-01-2020" < "01-##-2020" - false
		 *		"**-01-2020" < "01-01-####" - false
		 *		"01-**-2020" < "##-01-2020" - false
		 *		"01-**-2020" < "01-##-2020" - false
		 *		"01-**-2020" < "01-01-####" - false
		 *		"01-01-****" < "##-01-2020" - false
		 *		"01-01-****" < "01-##-2020" - false
		 *		"01-01-****" < "01-01-####" - false
		 * Сравнение остальных случаев происходит в отдельности по каждому из полей (day, month, year)
		 *		Для valid-полей все стандартно:
		 *			"01-01-2020" < "01-01-2020" - false
		 *			"02-01-2020" < "01-01-2020" - false
		 *			"01-02-2020" < "01-01-2020" - false
		 *			"01-01-2022" < "01-01-2020" - false
		 *			"01-01-2020" < "02-01-2020" - true
		 *			"01-01-2020" < "01-02-2020" - true
		 *			"01-01-2020" < "01-01-2022" - true
		 *		Any-поле всегда равно valid-полю:
		 *			"01-01-2020" < "**-01-2020" - false
		 *			"01-01-2020" < "01-**-2020" - false
		 *			"01-01-2020" < "01-01-****" - false
		 *		Undefined-поле всегда не равно valid-полю:
		 *			"01-01-2020" < "##-01-2020" - false
		 *			"01-01-2020" < "01-##-2020" - false
		 *			"01-01-2020" < "01-01-####" - false
		 *		Any-поле всегда равно any-полю:
		 *			"**-01-2020" < "**-01-2020" - false
		 *			"01-**-2020" < "01-**-2020" - false
		 *			"01-01-****" < "01-01-****" - false
		 *		Undefined-поле всегда равно undefined-полю:
		 *			"##-01-2020" < "##-01-2020" - false
		 *			"01-##-2020" < "01-##-2020" - false
		 *			"01-01-####" < "01-01-####" - false
		 * @param rhs
		 * @return
		 */
		bool operator<(const date& rhs) const;

		/**
		 * @brief operator <=
		 * Сравнение двух дат, содержащих хотя бы одно поле any или undefined, всегда возвращает false:
		 *		"**-01-2020" <= "##-01-2020" - false
		 *		"**-01-2020" <= "01-##-2020" - false
		 *		"**-01-2020" <= "01-01-####" - false
		 *		"01-**-2020" <= "##-01-2020" - false
		 *		"01-**-2020" <= "01-##-2020" - false
		 *		"01-**-2020" <= "01-01-####" - false
		 *		"01-01-****" <= "##-01-2020" - false
		 *		"01-01-****" <= "01-##-2020" - false
		 *		"01-01-****" <= "01-01-####" - false
		 * Сравнение остальных случаев происходит в отдельности по каждому из полей (day, month, year)
		 *		Для valid-полей все стандартно:
		 *			"01-01-2020" <= "01-01-2020" - true
		 *			"02-01-2020" <= "01-01-2020" - false
		 *			"01-02-2020" <= "01-01-2020" - false
		 *			"01-01-2022" <= "01-01-2020" - false
		 *			"01-01-2020" <= "02-01-2020" - true
		 *			"01-01-2020" <= "01-02-2020" - true
		 *			"01-01-2020" <= "01-01-2022" - true
		 *		Any-поле всегда равно valid-полю:
		 *			"01-01-2020" <= "**-01-2020" - true
		 *			"01-01-2020" <= "01-**-2020" - true
		 *			"01-01-2020" <= "01-01-****" - true
		 *		Undefined-поле всегда не равно valid-полю:
		 *			"01-01-2020" <= "##-01-2020" - false
		 *			"01-01-2020" <= "01-##-2020" - false
		 *			"01-01-2020" <= "01-01-####" - false
		 *		Any-поле всегда равно any-полю:
		 *			"**-01-2020" <= "**-01-2020" - true
		 *			"01-**-2020" <= "01-**-2020" - true
		 *			"01-01-****" <= "01-01-****" - true
		 *		Undefined-поле всегда равно undefined-полю:
		 *			"##-01-2020" <= "##-01-2020" - true
		 *			"01-##-2020" <= "01-##-2020" - true
		 *			"01-01-####" <= "01-01-####" - true
		 * @param rhs
		 * @return
		 */
		bool operator<=(const date& rhs) const;

		friend std::ostream& operator<<(std::ostream& stream, const date& rhs);
	/** @} */

	/** @name Setters */
	/** @{ */
	public:
		void set_day(int day);
		void set_month(int month);
		void set_year(int year);

		void set_day(const std::string& day);
		void set_month(const std::string& month);
		void set_year(const std::string& year);
	/** @} */

	/** @name Getters */
	/** @{ */
	public:
		int get_day() const;
		int get_month() const;
		int get_year() const;
	/** @} */

	/** @name States */
	/** @{ */
	public:
		bool is_day_valid() const;
		bool is_month_valid() const;
		bool is_year_valid() const;

		bool is_day_any() const;
		bool is_month_any() const;
		bool is_year_any() const;

		bool is_day_undefined() const;
		bool is_month_undefined() const;
		bool is_year_undefined() const;

		bool is_valid() const;
		bool is_any() const;
		bool is_undefined() const;
	/** @} */
	};
}

#endif
